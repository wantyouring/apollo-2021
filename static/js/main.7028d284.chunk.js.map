{"version":3,"sources":["components/Movie.js","routes/Detail.js","routes/Home.js","components/App.js","apollo.js","index.js"],"names":["TOGGLE_LIKE_MOVIE","gql","Container","styled","div","Poster","props","bg","id","isLiked","useMutation","variables","parseInt","toggleLikeMovie","to","onClick","GET_MOVIE","Column","Title","h1","Subtitle","h4","Description","p","Movies","useParams","useQuery","loading","data","movie","title","language","rating","description_intro","medium_cover_image","suggestions","map","m","Movie","GET_MOVIES","Header","header","h3","Loading","error","movies","App","exact","path","component","Home","Detail","cache","InMemoryCache","link","createHttpLink","uri","client","ApolloClient","resolvers","Mutation","_","modify","fields","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7028d284.chunk.js","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst TOGGLE_LIKE_MOVIE = gql`\n  mutation toggleLikeMovie($id: Int!) {\n    toggleLikeMovie(id: $id) @client\n  }\n`;\n\nconst Container = styled.div`\n  height: 400px;\n  border-radius: 7px;\n  width: 100%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: transparent;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  border-radius: 7px;\n`;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({ id, bg, isLiked = false }) => {\n  const [toggleLikeMovie] = useMutation(TOGGLE_LIKE_MOVIE, {\n    variables: { id: parseInt(id) },\n  });\n  return (\n    <Container>\n      <Link to={`/${id}`}>\n        <Poster bg={bg} />\n      </Link>\n      <button onClick={toggleLikeMovie}>{isLiked ? 'Unlike' : 'Like'}</button>\n    </Container>\n  );\n};\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useParams } from 'react-router';\nimport styled from 'styled-components';\nimport Movie from '../components/Movie';\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      id\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n      isLiked @client\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  height: 80vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\n\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nconst Poster = styled.div`\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 80%;\n  position: relative;\n  top: -200px;\n`;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id: parseInt(id) },\n  });\n\n  return (\n    <>\n      <Container>\n        <Column>\n          <Title>\n            {loading\n              ? 'Loading...'\n              : `${data.movie.title} ${data.movie.isLiked ? 'ðŸ’–' : 'ðŸ˜ž'}`}\n          </Title>\n          <Subtitle>\n            {data?.movie?.language} {data?.movie?.rating}\n          </Subtitle>\n          <Description>{data?.movie?.description_intro}</Description>\n        </Column>\n        <Poster bg={data?.movie?.medium_cover_image}></Poster>\n      </Container>\n      <Container>\n        <Movies>\n          {data?.suggestions?.map((m) => (\n            <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />\n          ))}\n        </Movies>\n      </Container>\n    </>\n  );\n};\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Movie from '../components/Movie';\n\nconst GET_MOVIES = gql`\n  {\n    movies {\n      id\n      medium_cover_image\n      isLiked @client\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  height: 45vh;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 35px;\n`;\n\nconst Loading = styled.div`\n  font-size: 18px;\n  opacity: 0.5;\n  font-weight: 500;\n  margin-top: 10px;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  const { loading, error, data } = useQuery(GET_MOVIES);\n  return (\n    <Container>\n      <Header>\n        <Title>Apollo 2021</Title>\n        <Subtitle>I love GraphQL</Subtitle>\n      </Header>\n      {loading && <Loading>Loading...</Loading>}\n      <Movies>\n        {data?.movies?.map((m) => (\n          <Movie\n            key={m.id}\n            id={m.id}\n            isLiked={m.isLiked}\n            bg={m.medium_cover_image}\n          />\n        ))}\n      </Movies>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Detail from '../routes/Detail';\nimport Home from '../routes/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/:id\" component={Detail} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\n\nconst cache = new InMemoryCache();\nconst link = new createHttpLink({\n  uri: 'https://movieql2.vercel.app/',\n});\n\nconst client = new ApolloClient({\n  cache,\n  link,\n  resolvers: {\n    Movie: {\n      isLiked: () => false,\n    },\n    Mutation: {\n      toggleLikeMovie: (_, { id }, { cache }) => {\n        cache.modify({\n          id: `Movie:${id}`,\n          fields: {\n            isLiked: (isLiked) => !isLiked,\n          },\n        });\n      },\n    },\n  },\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport client from './apollo';\nimport { ApolloProvider } from '@apollo/client';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}